<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本地环境如何访问需要 ssh 通道的服务（mysql、redis 等）</title>
    <url>/2022/12/08/%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E9%9C%80%E8%A6%81-ssh-%E9%80%9A%E9%81%93%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%88mysql%E3%80%81redis-%E7%AD%89%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为日常工作中，测试服务器需要 ssh 通道才能连接，当测试反馈 bug 的时候，而本地环境缺失数据或者造对应数据无法复现从而导致解决问题低下，这个时候如果本地环境可以连接的测试的数据库，那调试真是如鱼得水。</p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="下载模板"><a href="#下载模板" class="headerlink" title="下载模板"></a>下载模板</h2><p>将下方的代码生成 filename.sh 放置在对应 UNIX 系统中（windows 系统可以安装 wsl， 参照 <a href="https://blog.csdn.net/weixin_43832080/article/details/127385743">wsl 安装</a>）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">filter=<span class="string">&quot;IPv4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 环境判断，方便切换不同环境的 mysql</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> = <span class="string">&quot;test&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">	<span class="comment">#本地需要映射的端口</span></span><br><span class="line">	port=33061 </span><br><span class="line">	<span class="comment">#mysql服务IP&amp;端口, 切记前面有一个:, 举例 :10.1.1.1:3306</span></span><br><span class="line">	portMap=<span class="string">&quot;&quot;</span></span><br><span class="line">	<span class="comment">#ssh的端口, 一般情况不用修改</span></span><br><span class="line">	serverPort=22</span><br><span class="line">	<span class="comment">#认证证书文件绝对地址, 通过运维提供的跳板机后台下载的 pem 文件， 举例 /home/public/.ssh/public.pem</span></span><br><span class="line">	pemPath=<span class="string">&quot;&quot;</span></span><br><span class="line">	<span class="comment">#账户信息&amp;服务器IP, 举例 public@40.40.40.1</span></span><br><span class="line">	username=<span class="string">&quot;&quot;</span></span><br><span class="line">	<span class="comment">#密码, ssh密钥文件密码 || 通行短语</span></span><br><span class="line">	password=<span class="string">&quot;&quot;</span></span><br><span class="line">	<span class="comment">#关键字</span></span><br><span class="line">	key=<span class="string">&quot;.pem&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="comment">#可以复制填写上述内容，实现 master 环境的连接</span></span><br><span class="line"><span class="keyword">fi</span>	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 查询端口是否被占用 (如果被其他程序占用可以切换 port)</span></span><br><span class="line"><span class="comment"># /usr/bin/lsof -i:33061 | grep IPv4</span></span><br><span class="line">pids=$(/usr/bin/lsof -i:<span class="variable">$&#123;port&#125;</span> | grep <span class="variable">$&#123;filter&#125;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$pids</span>&quot;</span> != <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span>	</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot; ssh alive &quot;</span> <span class="variable">$pids</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 执行 ssh连接</span></span><br><span class="line">expect &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">	set timeout 3</span></span><br><span class="line"><span class="string">	spawn sudo ssh -i $&#123;pemPath&#125; -fN -L$&#123;port&#125;$&#123;portMap&#125; -p$&#123;serverPort&#125; $&#123;username&#125;</span></span><br><span class="line"><span class="string">	expect &#123;</span></span><br><span class="line"><span class="string">		 &quot;*alive*&quot; &#123;send &quot;alive\r&quot;&#125;</span></span><br><span class="line"><span class="string">		 &quot;*$&#123;key&#125;&quot; &#123; send &quot;$&#123;password&#125;\r&quot; &#125;	</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">	expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>


<h2 id="修改模板文件"><a href="#修改模板文件" class="headerlink" title="修改模板文件"></a>修改模板文件</h2><p>修改对应模板中变量声明定义，按照对应文档注释进行修改， 下方提供一个修改好的样例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#1. 环境判断，方便切换不同环境的 mysql</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> = <span class="string">&quot;test&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">	port=33061</span><br><span class="line">	filter=<span class="string">&quot;IPv4&quot;</span></span><br><span class="line">	portMap=<span class="string">&quot;:10.10.0.1:3306&quot;</span></span><br><span class="line">	serverPort=22</span><br><span class="line">	pemPath=<span class="string">&quot;/home/public/.ssh/public.pem&quot;</span></span><br><span class="line">	username=<span class="string">&quot;public@40.4.15.183&quot;</span></span><br><span class="line">	password=<span class="string">&quot;1234567&quot;</span></span><br><span class="line">	<span class="comment">#关键字</span></span><br><span class="line">	key=<span class="string">&quot;.pem&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">#可以复制填写上述内容，实现 master 环境的连接</span></span><br><span class="line"><span class="keyword">fi</span> </span><br></pre></td></tr></table></figure>
<p>修改完成后， 保存即可</p>
<h2 id="安装-expect"><a href="#安装-expect" class="headerlink" title="安装 expect"></a>安装 expect</h2><p><strong>Expect</strong> 是UNIX系统中用来实现自动化控制和测试的软件工具，用于解决交互式的处理，例如输入密码等。</p>
<p>相关命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install expect</span><br></pre></td></tr></table></figure>

<h2 id="运行-shell-脚本"><a href="#运行-shell-脚本" class="headerlink" title="运行 shell 脚本"></a>运行 shell 脚本</h2><p>输入 filename test 的命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./filename.sh <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<p> 若端口被其他应用占用可以使用 sudo kill PID 来进行处理，个人建议更换新的端口号</p>
<h2 id="修改代码的DB连接串"><a href="#修改代码的DB连接串" class="headerlink" title="修改代码的DB连接串"></a>修改代码的DB连接串</h2><p>需要注意 host 地址改为本主机IP， 端口改为 filename.sh 修改 port </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;db&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;class&#x27;</span>     =&gt; <span class="string">&#x27;yii\db\Connection&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8mb4&#x27;</span>,</span><br><span class="line">    <span class="comment">// 测试环境配置</span></span><br><span class="line">    <span class="string">&#x27;dsn&#x27;</span>       =&gt; <span class="string">&#x27;mysql:host=127.0.0.1;port=33061;dbname=db&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
</search>
